@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var fullName = user?.FullName ?? User.Identity?.Name ?? "Guest";
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item d-flex align-items-center">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="@Localizer["Manage"]">
                @Localizer["Hello"] @fullName!
            </a>
        </li>
        <li class="nav-item d-flex align-items-center">
            <form class="d-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" method="post">
                <button type="submit" class="btn btn-link nav-link text-dark p-0 m-0">@Localizer["Logout"]</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">@Localizer["Register"]</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">@Localizer["Login"]</a>
        </li>
    }
</ul>
