@model SportSystem2.Models.Player
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@using SportSystem2.Services
@{
    ViewData["Title"] = Localizer["Player Profile"];
}

<h1 class="mb-4 text-center text-primary">@Localizer["Player Profile"]</h1>

<div class="card shadow-sm mb-5 mx-auto" style="max-width: 700px;">
    <div class="row g-0">
        <div class="col-md-4 d-flex align-items-center justify-content-center p-3 bg-light">
            @if (!string.IsNullOrEmpty(Model.PhotoPath))
            {
                <img src="@Model.PhotoPath" class="img-fluid rounded-circle border border-3 border-primary" alt="@Model.FullName" style="max-height: 200px; object-fit: cover;" />
            }
            else
            {
                <div class="text-muted text-center" style="width: 150px; height: 150px; line-height: 150px; border: 2px dashed #6c757d; border-radius: 50%; font-size: 3rem;">
                    <i class="bi bi-person"></i>
                </div>
            }
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h3 class="card-title mb-3">@Model.FullName</h3>
                <p class="text-muted mb-4">
                    @Localizer["{0} #{1}", Model.Position, Model.Number]
                    @if (!string.IsNullOrEmpty(Model.Team?.City))
                    {
                        <span>— @Model.Team.City</span>
                    }
                    @if (!string.IsNullOrEmpty(Model.Team?.Name))
                    {
                        <span> @Model.Team.Name</span>
                    }
                </p>

                <dl class="row">
                    <dt class="col-sm-4 fw-semibold text-secondary">@Localizer["Birth Date"]:</dt>
                    <dd class="col-sm-8">@Model.BirthDate.ToShortDateString()</dd>

                    <dt class="col-sm-4 fw-semibold text-secondary">@Localizer["Age"]</dt>
                    <dd class="col-sm-8">@Model.Age</dd>

                    <dt class="col-sm-4 fw-semibold text-secondary">@Localizer["Height"]:</dt>
                    <dd class="col-sm-8">@Model.Height cm</dd>

                    <dt class="col-sm-4 fw-semibold text-secondary">@Localizer["Weight"]:</dt>
                    <dd class="col-sm-8">@Model.Weight kg</dd>

                    <dt class="col-sm-4 fw-semibold text-secondary">@Localizer["Gender"]:</dt>
                    <dd class="col-sm-8">@Model.Gender</dd>
                </dl>

                <div class="mt-4 d-flex gap-3">
                    <a asp-action="Index" class="btn btn-outline-secondary flex-fill">@Localizer["Back to List"]</a>
                </div>
            </div>
        </div>
    </div>
</div>

<h2 class="mt-5 mb-3 text-primary">@Localizer["Player Events by Match"]</h2>

@if (Model.PlayerEvents != null && Model.PlayerEvents.Any())
{
    var groupedEvents = Model.PlayerEvents
        .GroupBy(e => e.Match)
        .OrderByDescending(g => g.Key.Date);

    <div class="accordion" id="playerEventsAccordion">
        @foreach (var matchGroup in groupedEvents)
        {
            var match = matchGroup.Key;
            var matchId = match.MatchId;
            var collapseId = $"collapseMatch{matchId}";
            var headingId = $"headingMatch{matchId}";

            <div class="accordion-item">
                <h2 class="accordion-header" id="@headingId">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                        @($"{match.TeamA.Name} - {match.TeamB.Name} | {match.Date:dd.MM.yyyy HH:mm} | {match.TournamentRound.Location}")
                    </button>
                </h2>
                <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#playerEventsAccordion">
                    <div class="accordion-body">
                        @{
                            var periodsGrouped = matchGroup
                            .GroupBy(e => new { e.PeriodType, e.PeriodNumber })
                            .OrderBy(g => g.Key.PeriodType)
                            .ThenBy(g => g.Key.PeriodNumber);

                            string GetPeriodLabel(SportSystem2.Models.PeriodType type, int number) =>
                            (type == SportSystem2.Models.PeriodType.Half
                            ? Localizer["Half {0}", number]
                            : Localizer["Quarter {0}", number]).Value;
                        }

                        @foreach (var periodGroup in periodsGrouped)
                        {
                                <h5>
                                    @(periodGroup.Key.PeriodType == SportSystem2.Models.PeriodType.Half
                                    ? Localizer["Half"]
                                    : Localizer["Quarter"])
                                    @periodGroup.Key.PeriodNumber
                                </h5>
                            <table class="table table-striped table-bordered mb-4">
                                <thead>
                                    <tr>
                                        <th style="width: 80px;">@Localizer["Minute"]</th>
                                        <th>@Localizer["Description"]</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ev in periodGroup.OrderBy(e => e.Minute))
                                    {
                                        <tr>
                                            <td>@ev.Minute</td>
                                            <td>@EventDescriptionBuilder.GetPlayerEventDescription(ev)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-muted fst-italic">@Localizer["No events recorded for this player."]</p>
}
